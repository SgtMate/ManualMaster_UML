'' 7h

@startuml 1a

class Produkt{
    + name: String
}
Produkt "1" -- "*" Anleitung
Produkt "*" -- "*" Land : wird vertrieben in >
Produkt "1" -- "0..1" Sperre


class Land{
    + bezeichnung: String
}
class Sprache{
    + bezeichung: String
}
LandSprachKombination "*" -- "1" Sprache
LandSprachKombination "*" -- "1" Land


class Freigabe{
    + begrüngung : String{Optional}
}
class Zurückweisung{
    + begründung : String
}
interface Antwort{

}
Antwort <|-- Freigabe
Antwort <|-- Zurückweisung

'' Anleitungen pflegen, wenn das Produkt dort vertrieben wird
'' Finale anleitungen erneut hochladen
class Anleitung{
    + datei : Blob
    + final: Boolean
}
Anleitung "1" -- "0..2" Antwort
LandSprachKombination "1"-- "*" Anleitung

class Rolle
class ProduktManager{
    + produktAnlegen() : Produkt
    + produktBearbeiten(produkt : Produkt)
    + produktSperren(produkt : Produkt) 
    '' Nur Produktmanager, der die Sperre veranlasst hat, kann diese wieder aufheben
    + produktSperreAufheben(produkt : Produkt)
    + fehlendeAnleitungenAnzeigen()
    + freigabestatusAnzeigen()
}
ProduktManager "1" -- "*" Sperre : erstellt/löscht Sperre\n(sperrt/entsperrt Produkt) >

class Administrator{
    + spracheAnlegen()
    + landAnlegen()
    + landSpracheZuordnen(land : Land, sprache : Sprache)
    '' TODO
    + benutzerPflegen()
    + berichtErzeugen()
    + anleitungLöschen(anleitung : Anleitung)
    + produktLöschen(produkt : Produkt)
}

'' Land Sprach Kombination für übersetzre
class Übersetzer{
    + fehlendeAnleitungenAnzeigen()
    + vorhandeneAnleitungenAnzeigen()
    + zurückgewieseneAnleitungenAnzeigen()
    + anleitungHochladen(anleitung : Anleitung)
}
Übersetzer "1" -- "*" LandSprachKombination
Übersetzer "1" -- "*" Anleitung
interface Prüfer{
    + freizugebendeAnleitungenAnzeigen()
    + anleitungFreigeben(anleitung : Anleitung, begründung : String{Optinal})
    + anleitungZurückweisen(anleitung : Anleitung, begründung: String)
}
class Sprachprüfer
Prüfer <|-- Sprachprüfer
Sprachprüfer "*" -- "1" Sprache : Prüft >
class Fachprüfer
Prüfer <|-- Fachprüfer
Fachprüfer "*" -- "1" Produkt : Prüft >

Rolle <|-- ProduktManager
Rolle <|-- Administrator
Rolle <|-- Übersetzer
Rolle <|-- Prüfer

class Benutzer{
    + benutzername : String
    + anmelden()
}
Benutzer "*" - "1..*" Rolle : hat >


@enduml